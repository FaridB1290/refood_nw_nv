/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { FloatNullableFilter } from "../../util/FloatNullableFilter";
import { Type } from "class-transformer";
import { IsOptional, ValidateNested } from "class-validator";
import { DateTimeNullableFilter } from "../../util/DateTimeNullableFilter";
import { StringFilter } from "../../util/StringFilter";
import { StringNullableFilter } from "../../util/StringNullableFilter";
import { PanierWhereUniqueInput } from "../../panier/base/PanierWhereUniqueInput";
import { IntNullableFilter } from "../../util/IntNullableFilter";
import { RefundListRelationFilter } from "../../refund/base/RefundListRelationFilter";
import { RemboursementListRelationFilter } from "../../remboursement/base/RemboursementListRelationFilter";

@InputType()
class VenteWhereInput {
  @ApiProperty({
    required: false,
    type: FloatNullableFilter,
  })
  @Type(() => FloatNullableFilter)
  @IsOptional()
  @Field(() => FloatNullableFilter, {
    nullable: true,
  })
  co2Evite?: FloatNullableFilter;

  @ApiProperty({
    required: false,
    type: DateTimeNullableFilter,
  })
  @Type(() => DateTimeNullableFilter)
  @IsOptional()
  @Field(() => DateTimeNullableFilter, {
    nullable: true,
  })
  dateVente?: DateTimeNullableFilter;

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  id?: StringFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  methodePaiement?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: () => PanierWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => PanierWhereUniqueInput)
  @IsOptional()
  @Field(() => PanierWhereUniqueInput, {
    nullable: true,
  })
  panier?: PanierWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: IntNullableFilter,
  })
  @Type(() => IntNullableFilter)
  @IsOptional()
  @Field(() => IntNullableFilter, {
    nullable: true,
  })
  quantiteVendue?: IntNullableFilter;

  @ApiProperty({
    required: false,
    type: () => RefundListRelationFilter,
  })
  @ValidateNested()
  @Type(() => RefundListRelationFilter)
  @IsOptional()
  @Field(() => RefundListRelationFilter, {
    nullable: true,
  })
  refunds?: RefundListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => RemboursementListRelationFilter,
  })
  @ValidateNested()
  @Type(() => RemboursementListRelationFilter)
  @IsOptional()
  @Field(() => RemboursementListRelationFilter, {
    nullable: true,
  })
  remboursements?: RemboursementListRelationFilter;
}

export { VenteWhereInput as VenteWhereInput };

/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { AnnulationCreateNestedManyWithoutPaniersInput } from "./AnnulationCreateNestedManyWithoutPaniersInput";
import {
  ValidateNested,
  IsOptional,
  IsNumber,
  IsString,
  IsInt,
} from "class-validator";
import { Type } from "class-transformer";
import { CancellationCreateNestedManyWithoutPaniersInput } from "./CancellationCreateNestedManyWithoutPaniersInput";
import { IsJSONValue } from "../../validators";
import { GraphQLJSON } from "graphql-type-json";
import { InputJsonValue } from "../../types";
import { RestaurantWhereUniqueInput } from "../../restaurant/base/RestaurantWhereUniqueInput";
import { SaleCreateNestedManyWithoutPaniersInput } from "./SaleCreateNestedManyWithoutPaniersInput";
import { VenteCreateNestedManyWithoutPaniersInput } from "./VenteCreateNestedManyWithoutPaniersInput";

@InputType()
class PanierCreateInput {
  @ApiProperty({
    required: false,
    type: () => AnnulationCreateNestedManyWithoutPaniersInput,
  })
  @ValidateNested()
  @Type(() => AnnulationCreateNestedManyWithoutPaniersInput)
  @IsOptional()
  @Field(() => AnnulationCreateNestedManyWithoutPaniersInput, {
    nullable: true,
  })
  annulations?: AnnulationCreateNestedManyWithoutPaniersInput;

  @ApiProperty({
    required: false,
    type: () => CancellationCreateNestedManyWithoutPaniersInput,
  })
  @ValidateNested()
  @Type(() => CancellationCreateNestedManyWithoutPaniersInput)
  @IsOptional()
  @Field(() => CancellationCreateNestedManyWithoutPaniersInput, {
    nullable: true,
  })
  cancellations?: CancellationCreateNestedManyWithoutPaniersInput;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsNumber()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  co2Evite?: number | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  description?: string | null;

  @ApiProperty({
    required: false,
  })
  @IsJSONValue()
  @IsOptional()
  @Field(() => GraphQLJSON, {
    nullable: true,
  })
  listeRepas?: InputJsonValue;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  nom?: string | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  nombreRestants?: number | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  nombreVendus?: number | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsNumber()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  prix?: number | null;

  @ApiProperty({
    required: false,
    type: () => RestaurantWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => RestaurantWhereUniqueInput)
  @IsOptional()
  @Field(() => RestaurantWhereUniqueInput, {
    nullable: true,
  })
  restaurant?: RestaurantWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: () => SaleCreateNestedManyWithoutPaniersInput,
  })
  @ValidateNested()
  @Type(() => SaleCreateNestedManyWithoutPaniersInput)
  @IsOptional()
  @Field(() => SaleCreateNestedManyWithoutPaniersInput, {
    nullable: true,
  })
  sales?: SaleCreateNestedManyWithoutPaniersInput;

  @ApiProperty({
    required: false,
    type: () => VenteCreateNestedManyWithoutPaniersInput,
  })
  @ValidateNested()
  @Type(() => VenteCreateNestedManyWithoutPaniersInput)
  @IsOptional()
  @Field(() => VenteCreateNestedManyWithoutPaniersInput, {
    nullable: true,
  })
  ventes?: VenteCreateNestedManyWithoutPaniersInput;
}

export { PanierCreateInput as PanierCreateInput };

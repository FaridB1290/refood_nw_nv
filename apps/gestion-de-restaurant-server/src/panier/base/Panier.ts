/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { ObjectType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { Annulation } from "../../annulation/base/Annulation";
import {
  ValidateNested,
  IsOptional,
  IsNumber,
  IsDate,
  IsString,
  IsInt,
} from "class-validator";
import { Type } from "class-transformer";
import { Cancellation } from "../../cancellation/base/Cancellation";
import { IsJSONValue } from "../../validators";
import { GraphQLJSON } from "graphql-type-json";
import { JsonValue } from "type-fest";
import { Restaurant } from "../../restaurant/base/Restaurant";
import { Sale } from "../../sale/base/Sale";
import { Vente } from "../../vente/base/Vente";

@ObjectType()
class Panier {
  @ApiProperty({
    required: false,
    type: () => [Annulation],
  })
  @ValidateNested()
  @Type(() => Annulation)
  @IsOptional()
  annulations?: Array<Annulation>;

  @ApiProperty({
    required: false,
    type: () => [Cancellation],
  })
  @ValidateNested()
  @Type(() => Cancellation)
  @IsOptional()
  cancellations?: Array<Cancellation>;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsNumber()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  co2Evite!: number | null;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  createdAt!: Date;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  description!: string | null;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  id!: string;

  @ApiProperty({
    required: false,
  })
  @IsJSONValue()
  @IsOptional()
  @Field(() => GraphQLJSON, {
    nullable: true,
  })
  listeRepas!: JsonValue;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  nom!: string | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  nombreRestants!: number | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  nombreVendus!: number | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsNumber()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  prix!: number | null;

  @ApiProperty({
    required: false,
    type: () => Restaurant,
  })
  @ValidateNested()
  @Type(() => Restaurant)
  @IsOptional()
  restaurant?: Restaurant | null;

  @ApiProperty({
    required: false,
    type: () => [Sale],
  })
  @ValidateNested()
  @Type(() => Sale)
  @IsOptional()
  sales?: Array<Sale>;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  updatedAt!: Date;

  @ApiProperty({
    required: false,
    type: () => [Vente],
  })
  @ValidateNested()
  @Type(() => Vente)
  @IsOptional()
  ventes?: Array<Vente>;
}

export { Panier as Panier };

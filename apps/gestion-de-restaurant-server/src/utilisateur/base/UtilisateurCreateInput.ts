/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import {
  IsString,
  IsOptional,
  IsNumber,
  ValidateNested,
} from "class-validator";
import { RestaurantEntityCreateNestedManyWithoutUtilisateursInput } from "./RestaurantEntityCreateNestedManyWithoutUtilisateursInput";
import { Type } from "class-transformer";
import { RestaurantCreateNestedManyWithoutUtilisateursInput } from "./RestaurantCreateNestedManyWithoutUtilisateursInput";

@InputType()
class UtilisateurCreateInput {
  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  email?: string | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsNumber()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  localisationLat?: number | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsNumber()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  localisationLon?: number | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  motDePasse?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  nom?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  nomEntiteJuridique?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  numeroTelephone?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  numeroTva?: string | null;

  @ApiProperty({
    required: false,
    type: () => RestaurantEntityCreateNestedManyWithoutUtilisateursInput,
  })
  @ValidateNested()
  @Type(() => RestaurantEntityCreateNestedManyWithoutUtilisateursInput)
  @IsOptional()
  @Field(() => RestaurantEntityCreateNestedManyWithoutUtilisateursInput, {
    nullable: true,
  })
  restaurantEntities?: RestaurantEntityCreateNestedManyWithoutUtilisateursInput;

  @ApiProperty({
    required: false,
    type: () => RestaurantCreateNestedManyWithoutUtilisateursInput,
  })
  @ValidateNested()
  @Type(() => RestaurantCreateNestedManyWithoutUtilisateursInput)
  @IsOptional()
  @Field(() => RestaurantCreateNestedManyWithoutUtilisateursInput, {
    nullable: true,
  })
  restaurants?: RestaurantCreateNestedManyWithoutUtilisateursInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  typeCommerce?: string | null;
}

export { UtilisateurCreateInput as UtilisateurCreateInput };
